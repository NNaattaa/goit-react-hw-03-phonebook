{"version":3,"sources":["components/Filter/Filter.js","components/Layout/Layout.js","components/ContactForm/ContactForm.js","components/ContactList/ListItem/ListItem.js","components/ContactList/ContactList.js","components/App.js","index.js"],"names":["Label","styled","label","Input","input","Filter","value","onChangeFilter","type","onChange","target","Container","div","Layout","children","Form","form","Button","button","ContactForm","state","name","number","handleSubmit","e","preventDefault","onAddContact","props","setState","handleInputChange","this","onSubmit","required","Component","Item","li","ListItem","onRemove","onClick","List","ul","ContactList","contacts","onRemoveContact","map","id","key","Title","h1","Text","p","SemiTitle","h2","App","filter","addContact","find","contact","alert","test","newContact","uuid","prevState","removeContact","contactId","changeFilter","getVisibleContacts","toLowerCase","includes","savedContacts","localStorage","getItem","JSON","parse","prevProps","setItem","stringify","visibleContacts","length","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.660b28ec.chunk.js","sourcesContent":["import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Label = styled.label`\r\n  font-size: 2rem;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst Input = styled.input`\r\n  font-size: 2rem;\r\n  width: 40rem;\r\n  margin-bottom: 3rem;\r\n  margin-top: 0.4rem;\r\n  padding: 0.8rem 1rem 0.6rem;\r\n  border-radius: 0.4rem;\r\n`;\r\n\r\nfunction Filter({ value, onChangeFilter }) {\r\n  return (\r\n    <>\r\n      <Label>\r\n        Find contacts by name\r\n        <Input\r\n          type=\"text\"\r\n          value={value}\r\n          onChange={({ target: { value } }) => onChangeFilter(value)}\r\n        />\r\n      </Label>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Filter;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  margin: 8rem;\r\n  max-width: 50rem;\r\n`;\r\n\r\nconst Layout = ({ children }) => <Container>{children}</Container>;\r\n\r\nexport default Layout;\r\n","import React, { Component } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Form = styled.form`\r\n  margin-bottom: 5rem;\r\n  max-width: 44rem;\r\n  box-shadow: 0px 0px 4px 0px rgba(0, 0, 0, 0.75);\r\n  padding: 2.4rem 3rem;\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst Label = styled.label`\r\n  font-size: 2.6rem;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst Input = styled.input`\r\n  font-size: 2rem;\r\n  width: 36rem;\r\n  margin-bottom: 2rem;\r\n  padding: 0.8rem 1rem 0.6rem;\r\n  border-radius: 0.4rem;\r\n`;\r\n\r\nconst Button = styled.button`\r\n  display: block;\r\n  font-size: 2rem;\r\n  margin: 0 auto;\r\n  max-width: 30rem;\r\n  padding: 1rem 6rem;\r\n  border-radius: 2rem;\r\n  background-color: snow;\r\n  &:hover,\r\n  &:focus {\r\n    background-color: #40c965;\r\n    color: snow;\r\n    border-color: #7a7a7a;\r\n    box-shadow: 0px 0px 10px 0px rgba(0, 0, 0, 0.75);\r\n    outline: none;\r\n  }\r\n  &:active {\r\n    background-color: green;\r\n  }\r\n`;\r\n\r\nclass ContactForm extends Component {\r\n  static propTypes = {\r\n    onAddContact: PropTypes.func,\r\n  };\r\n\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const { name, number } = this.state;\r\n    const { onAddContact } = this.props;\r\n    onAddContact(name, number);\r\n    this.setState({\r\n      name: \"\",\r\n      number: \"\",\r\n    });\r\n  };\r\n\r\n  handleInputChange = ({ target: { value, name } }) => {\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n    return (\r\n      <Form onSubmit={this.handleSubmit}>\r\n        <Label>\r\n          Name\r\n          <Input\r\n            type=\"text\"\r\n            required\r\n            name=\"name\"\r\n            value={name}\r\n            onChange={this.handleInputChange}\r\n          />\r\n        </Label>\r\n        <Label>\r\n          Number\r\n          <Input\r\n            type=\"tel\"\r\n            required\r\n            name=\"number\"\r\n            value={number}\r\n            onChange={this.handleInputChange}\r\n          />\r\n        </Label>\r\n        <Button type=\"submit\">Add contact</Button>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ContactForm;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Item = styled.li`\r\n  position: relative;\r\n  font-size: 2rem;\r\n  margin-bottom: 1rem;\r\n  list-style-type: disc;\r\n  &:last-of-type {\r\n    margin-bottom: none;\r\n  }\r\n`;\r\n\r\nconst Button = styled.button`\r\n  display: inline-block;\r\n  position: absolute;\r\n  right: 0;\r\n  font-size: 1.8rem;\r\n  padding: 0.2rem 2rem;\r\n  border-radius: 2rem;\r\n  background-color: snow;\r\n  &:hover,\r\n  &:focus {\r\n    background-color: #40c965;\r\n    color: snow;\r\n    border-color: #7a7a7a;\r\n    box-shadow: 0px 0px 10px 0px rgba(0, 0, 0, 0.75);\r\n    outline: none;\r\n  }\r\n  &:active {\r\n    background-color: green;\r\n  }\r\n`;\r\n\r\nfunction ListItem({ name, number, onRemove }) {\r\n  return (\r\n    <Item>\r\n      {name}: {number}\r\n      <Button type=\"button\" onClick={onRemove}>\r\n        Delete\r\n      </Button>\r\n    </Item>\r\n  );\r\n}\r\n\r\nListItem.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default ListItem;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport PropTypes from \"prop-types\";\r\nimport ListItem from \"./ListItem\";\r\n\r\nconst List = styled.ul`\r\n  margin-left: 5rem;\r\n  margin-bottom: 5rem;\r\n`;\r\n\r\nfunction ContactList({ contacts, onRemoveContact }) {\r\n  return (\r\n    <List>\r\n      {contacts.map(({ id, name, number }) => (\r\n        <ListItem\r\n          key={id}\r\n          name={name}\r\n          number={number}\r\n          onRemove={() => onRemoveContact(id)}\r\n        />\r\n      ))}\r\n    </List>\r\n  );\r\n}\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.oneOfType([\r\n    PropTypes.arrayOf(\r\n      PropTypes.exact({\r\n        id: PropTypes.string.isRequired,\r\n        name: PropTypes.string.isRequired,\r\n        number: PropTypes.string.isRequired,\r\n      })\r\n    ),\r\n    PropTypes.array,\r\n  ]),\r\n};\r\n\r\nexport default ContactList;\r\n","import React, { Component } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport uuid from \"uuid/v4\";\r\nimport Filter from \"./Filter\";\r\nimport Layout from \"./Layout\";\r\nimport ContactForm from \"./ContactForm\";\r\nimport ContactList from \"./ContactList\";\r\nimport \"../base.css\";\r\n\r\nconst Title = styled.h1`\r\n  font-size: 4rem;\r\n  margin-bottom: 3rem;\r\n`;\r\n\r\nconst Text = styled.p`\r\n  font-size: 3rem;\r\n`;\r\n\r\nconst SemiTitle = styled.h2`\r\n  font-size: 4rem;\r\n  margin-bottom: 3rem;\r\n`;\r\n\r\nclass App extends Component {\r\n  state = {\r\n    contacts: [],\r\n    filter: \"\",\r\n  };\r\n\r\n  componentDidMount() {\r\n    const savedContacts = localStorage.getItem(\"contacts\");\r\n\r\n    if (savedContacts) {\r\n      this.setState({\r\n        contacts: JSON.parse(savedContacts),\r\n      });\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (prevState.contacts !== this.state.contacts) {\r\n      localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts));\r\n    }\r\n  }\r\n\r\n  addContact = (name, number) => {\r\n    const { contacts } = this.state;\r\n    const checkedForName = contacts.find((contact) => name === contact.name);\r\n    if (checkedForName) {\r\n      return alert(`${name} is already in contacts`);\r\n    }\r\n    const numberCheck = /^[+]*[(]{0,1}[0-9]{1,4}[)]{0,1}[-\\s./0-9]*$/g;\r\n    const checkedNumber = numberCheck.test(number);\r\n    if (!checkedNumber) {\r\n      return alert(\"Hey! This is not a real number :)\");\r\n    }\r\n    const newContact = {\r\n      id: uuid(),\r\n      name,\r\n      number,\r\n    };\r\n    this.setState((prevState) => ({\r\n      contacts: [...prevState.contacts, newContact],\r\n    }));\r\n  };\r\n\r\n  removeContact = (contactId) => {\r\n    this.setState((prevState) => ({\r\n      contacts: prevState.contacts.filter(({ id }) => id !== contactId),\r\n    }));\r\n  };\r\n\r\n  changeFilter = (filter) => {\r\n    this.setState({ filter });\r\n  };\r\n\r\n  getVisibleContacts = () => {\r\n    const { contacts, filter } = this.state;\r\n    return contacts.filter(({ name }) =>\r\n      name.toLowerCase().includes(filter.toLowerCase())\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const { contacts, filter } = this.state;\r\n\r\n    const visibleContacts = this.getVisibleContacts();\r\n\r\n    return (\r\n      <Layout>\r\n        <Title>Phonebook</Title>\r\n        <ContactForm onAddContact={this.addContact} />\r\n\r\n        <SemiTitle>Contacts</SemiTitle>\r\n        {contacts.length >= 2 && (\r\n          <Filter value={filter} onChangeFilter={this.changeFilter} />\r\n        )}\r\n        {visibleContacts.length > 0 ? (\r\n          <ContactList\r\n            contacts={visibleContacts}\r\n            onRemoveContact={this.removeContact}\r\n          />\r\n        ) : contacts.length === 0 ? (\r\n          <Text>There are no contacts. Add some :)</Text>\r\n        ) : (\r\n          <Text>No contacts found :(</Text>\r\n        )}\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./components/App\";\r\n\r\nReactDOM.render(<App />, document.querySelector(\"#root\"));\r\n"],"sourceRoot":""}